
# 
## Add this linbe to the http section of /etc/nginx/nginx.conf
##
## I am yet to figure out how to do it with ansible. so you have to do it manualy for now
#

#log_format upstreamlog '[$time_local] $remote_addr - $remote_user - $server_name $host to: $upstream_addr: $request $status upstream_response_time $upstream_response_time msec $msec request_time $request_time';


upstream rProduction {
  server 127.0.0.1:8083;
}

upstream rStaging {
  server 127.0.0.1:7083;
}

upstream rDevelopment {
  server 127.0.0.1:6083;
}

#
## Drop all connection without a host header
## https://nginx.org/en/docs/http/request_processing.html#how_to_prevent_undefined_server_names
#
server {
  listen 80;
  server_name "";
  return 444;
}

#
## production 
#
server {
    listen 80;
    listen [::]:80;
    server_name uni-api-prd.unizonn.com;
	  default_type application/json;

    # drop all connection ending with .php
    # https://nginx.org/en/docs/http/request_processing.html#how_to_prevent_undefined_server_names
    location ~* \.php$ {
      return 444;
    }
   
    # letsencrypt verification
    location ^~ /.well-known {
      root /var/www/html;
    }


    location / {
      # force HTTPS
      # return 301 https://$server_name$request_uri;
      # Force user to call HTTPS
      return 403 '{status:"forbidden", "code":"403", "message": "Use HTTPS protocol"}';
    }

  }

server {
    listen 443 ssl;
    listen [::]:443;
    server_name uni-api-prd.unizonn.com;
    
    access_log /var/log/nginx/access.log upstreamlog;

    # drop all connection ending with .php
    # https://nginx.org/en/docs/http/request_processing.html#how_to_prevent_undefined_server_names
    location ~* \.php$ {
      return 444;
    }


    location / {

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_max_temp_file_size 0;
      proxy_read_timeout 300s;
      proxy_set_header X-Forwarded-Proto $scheme;
		  client_max_body_size 500M;

      proxy_pass http://rProduction/;
    }

    ssl_certificate /etc/letsencrypt/live/uni-api-prd.unizonn.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/uni-api-prd.unizonn.com/privkey.pem;
    include /etc/letsencrypt/ssl-options.conf;
    ssl_dhparam /etc/letsencrypt/dhparams.pem;

}

#
## staging API 
#
server {
    listen 80;
    listen [::]:80;
    server_name api-stg.example.com;

	  default_type application/json;
    
    # drop all connection ending with .php
    # https://nginx.org/en/docs/http/request_processing.html#how_to_prevent_undefined_server_names
    location ~* \.php$ {
      return 444;
    }

    # letsencrypt verification
    location ^~ /.well-known {
      root /var/www/html;
    }


    location / {
      # force HTTPS
      # return 301 https://$server_name$request_uri;
      # Force user to call HTTPS
      return 403 '{status:"forbidden", "code":"403", "message": "Use HTTPS protocol"}';
    }

  }

server {
    listen 443 ssl;
    listen [::]:443;
    server_name uni-api-stg.unizonn.com;
  
    access_log /var/log/nginx/access.log upstreamlog;

    # drop all connection ending with .php
    # https://nginx.org/en/docs/http/request_processing.html#how_to_prevent_undefined_server_names
    location ~* \.php$ {
      return 444;
    }

    
    location / {

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_max_temp_file_size 0;
      proxy_read_timeout 300s;
      proxy_set_header X-Forwarded-Proto $scheme;
		  client_max_body_size 500M;


      proxy_pass http://rStaging/;
    }

    ssl_certificate /etc/letsencrypt/live/api-stg.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/uni-api-stg.unizonn.com/privkey.pem;
    include /etc/letsencrypt/ssl-options.conf;
    ssl_dhparam /etc/letsencrypt/dhparams.pem;
}


#
## Development API 
#
server {
    listen 80;
    listen [::]:80;
    server_name uni-api-dev.unizonn.com;

	  default_type application/json;
    
    # drop all connection ending with .php
    # https://nginx.org/en/docs/http/request_processing.html#how_to_prevent_undefined_server_names
    location ~* \.php$ {
      return 444;
    }

    # letsencrypt verification
    location ^~ /.well-known {
      root /var/www/html;
    }


    location / {
      # force HTTPS
      # return 301 https://$server_name$request_uri;
      # Force user to call HTTPS
      return 403 '{status:"forbidden", "code":"403", "message": "Use HTTPS protocol"}';
    }

  }

server {
    listen 443 ssl;
    listen [::]:443;
    server_name uni-api-dev.unizonn.com;
  
    access_log /var/log/nginx/access.log upstreamlog;

    # drop all connection ending with .php
    # https://nginx.org/en/docs/http/request_processing.html#how_to_prevent_undefined_server_names
    location ~* \.php$ {
      return 444;
    }

    
    location / {

      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header Host $http_host;
      proxy_set_header X-NginX-Proxy true;
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_max_temp_file_size 0;
      proxy_read_timeout 300s;
      proxy_set_header X-Forwarded-Proto $scheme;
		  client_max_body_size 500M;


      proxy_pass http://rDevelopment/;
    }

    ssl_certificate /etc/letsencrypt/live/uni-api-dev.unizonn.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/uni-api-dev.unizonn.com/privkey.pem;
    include /etc/letsencrypt/ssl-options.conf;
    ssl_dhparam /etc/letsencrypt/dhparams.pem;
}

